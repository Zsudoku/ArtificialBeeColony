#include <iostream>
#include <fstream>
#include <windows.h>
#include "headers/jsonout.h"
#include "headers/planjson.h"
#include "headers/Constants.h"
#include "classes/Food.h"
//#include "headers/head.h"
#include "headers/initout.h"
#include "headers/abc.h"
#include <vector>
#include <string.h>
using namespace std;
int main(){
    ofstream fcout;
	fcout.open("output/json.json");
    fcout<<"["<<endl;
	fcout.close();
    Food f;
    int best[GoodsNum] = {

    };
    for(int i=0;i<GoodsNum;i++){
        f.setSequence(i,best[i]);
    }
    enSimpleCode(f);
    // vector<string> tmp_files;
	
	// ifstream winfile("output/json.json");
	// if ( ! winfile )
	// {
	// 	cout << "fail" << endl;
	// 	return 0;
	// }

	// string lineContent;
	// while ( getline( winfile, lineContent, '\n' ) )
	// {
	// 	tmp_files.push_back( lineContent + "\r\n" );
	// }

	// winfile.close();

	// ofstream offile("output/json.json",ios::out );
	// vector<string>::iterator siter = tmp_files.begin();

	// copy( tmp_files.begin(), tmp_files.end()-1, ostream_iterator<string>(offile) );

	// cout << "ok!" << endl;

	//offile.close();
    // fcout.open("output/json.json",ios::app);
    // fcout<<"]"<<endl;
	// fcout.close();



    // int twices1 = 0;
    // int twices2 = 0;
    // lpt[1].taskNumber = 0;
    // lpt[0].taskNumber = 0;
    // creat_json_file();
    // // cout<<"start"<<endl;
    // int a;
    // cout<<"input something to start this program"<<endl;
    // cin>>a;

    // while(true){
        
    //     times = 1000;
    //     twices2 += times;
    //     twices1 += times;
    //     if(twices2 > 25000 ){
    //         cout<<"2 start"<<endl;
    //         lpt[1].taskNumber = 1;
    //         twices2 = 0;
    //         creat_json_file();
            
    //     }
    //     else if(twices1 > 10000){
    //         cout<<"1 start"<<endl;
    //         lpt[0].taskNumber = 1;
    //         twices1 = 0;
    //         creat_json_file();
            
    //     }
    //     else{
    //         cout<<" no start"<<endl;
    //         lpt[1].taskNumber = 0;
    //         lpt[0].taskNumber = 0;
    //         creat_json_file();
    //     }
    //     Sleep(500);
    //     //lpt[0].taskNumber = 0;
        

    // }
    // int i = 1;
    // int up1[2][500];
    // int up2[2][500];
    // while (i<501){
    //     int ii = i-1;
    //     up1[0][i] = ii * 20 + 17.5;
    //     up1[1][i] = up1[0][i] + 621.9;

    //     up2[0][i] = ii * 20 ;
    //     up2[1][i] = up2[0][i] + 68.23;

    //     i++;
    // }

    // ofstream fcout;
	// fcout.open("output/up.txt");
    // for(int i=0;i<500;i++){
    //     fcout<<up1[1][i]<<endl;
    //     fcout<<up2[1][i]<<endl;
    // }
	
	// fcout.close();
    // int count = 0;
    // for(int i=0;i<500;i++){
    //     for(int j=0;j<500;j++){
    //         if(abs(up1[1][i] - up2[1][j]) < 10){
    //             cout<<"error!,  "<<abs(up1[1][i] - up2[1][j]) <<"       "<<count <<endl;
    //             cout<<up1[1][i]<<"  "<<i<<endl;
    //             cout<<up2[1][j]<<"   "<<j<<endl;
    //             count++;
    //         }
    //     }
    // }
    // cout<<count<<endl;
    //creat_json_file();
    system("pause");
    return 0;
}
